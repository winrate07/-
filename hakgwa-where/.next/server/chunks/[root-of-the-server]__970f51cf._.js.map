{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///Users/hyeonseungk/Desktop/-/hakgwa-where/src/app/api/recommend/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport { PrismaClient } from \"@/generated/prisma\";\n\nconst prisma = new PrismaClient();\n\nexport async function POST(req: NextRequest) {\n  try {\n    const { grade, scores, aptitude, interest, region } = await req.json();\n    if (!grade || !scores || !aptitude || !interest || !region) {\n      return NextResponse.json({ error: \"모든 항목을 입력해 주세요.\" }, { status: 400 });\n    }\n    const recommend = await prisma.recommend.create({\n      data: { grade, scores, aptitude, interest, region },\n    });\n    return NextResponse.json({ success: true, recommend });\n  } catch (error) {\n    return NextResponse.json({ error: \"서버 오류가 발생했습니다.\" }, { status: 500 });\n  }\n} "],"names":[],"mappings":";;;AAAA;;;;;;;;AAGA,MAAM,SAAS,IAAI;AAEZ,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,IAAI;QACpE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,YAAY,CAAC,YAAY,CAAC,QAAQ;YAC1D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAkB,GAAG;gBAAE,QAAQ;YAAI;QACvE;QACA,MAAM,YAAY,MAAM,OAAO,SAAS,CAAC,MAAM,CAAC;YAC9C,MAAM;gBAAE;gBAAO;gBAAQ;gBAAU;gBAAU;YAAO;QACpD;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM;QAAU;IACtD,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAiB,GAAG;YAAE,QAAQ;QAAI;IACtE;AACF","debugId":null}}]
}